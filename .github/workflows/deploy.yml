name: Build and Deploy Blog

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Optional: Install Astro check dependencies if needed
      - name: Install Astro check dependencies
        run: npm install --save-dev @astrojs/check typescript

      # Optional: Run Astro check (comment out if causing issues)
      # - name: Run Astro check
      #   run: npx astro check

      - name: Build Astro site
        run: npm run build
        env:
          NODE_ENV: production

      # --- SSH Setup ---
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known hosts
        run: |
          mkdir -p ~/.ssh
          if [ -n "${{ secrets.SSH_KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          else
            ssh-keyscan -p "${{ secrets.SSH_PORT }}" -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
          fi
          chmod 644 ~/.ssh/known_hosts

      - name: Verify SSH connection
        run: |
          test -n "${{ secrets.SSH_PRIVATE_KEY }}" || (echo "SSH_PRIVATE_KEY secret is missing" && exit 1)
          test -n "${{ secrets.SSH_HOST }}" || (echo "SSH_HOST secret is missing" && exit 1)
          test -n "${{ secrets.SSH_USER }}" || (echo "SSH_USER secret is missing" && exit 1)

      # --- Deploy ---
      - name: Deploy to server via rsync
        run: |
          rsync -avz --delete \
            --exclude='.htaccess' \
            --exclude='error_log' \
            --exclude='logs/' \
            --exclude='wp/' \
            -e "ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./dist/ "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/nico.ar-dist/"
